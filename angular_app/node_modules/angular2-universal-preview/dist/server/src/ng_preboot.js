function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(require('preboot'));
function prebootConfigDefault(config) {
    if (config === void 0) { config = {}; }
    return Object.assign({
        start: true,
        appRoot: 'app',
        replay: 'rerender',
        buffer: true,
        debug: false,
        uglify: true,
        presets: ['keyPress', 'buttonPress', 'focus']
    }, config || {});
}
exports.prebootConfigDefault = prebootConfigDefault;
function getPrebootCSS() {
    return "\n.preboot-overlay {\n  background: grey;\n  opacity: .27;\n}\n\n@keyframes spin {\n  to { transform: rotate(1turn); }\n}\n\n.preboot-spinner {\n  position: relative;\n  display: inline-block;\n  width: 5em;\n  height: 5em;\n  margin: 0 .5em;\n  font-size: 12px;\n  text-indent: 999em;\n  overflow: hidden;\n  animation: spin 1s infinite steps(8);\n}\n\n.preboot-spinner.small {\n  font-size: 6px;\n}\n\n.preboot-spinner.large {\n  font-size: 24px;\n}\n\n.preboot-spinner:before,\n.preboot-spinner:after,\n.preboot-spinner > div:before,\n.preboot-spinner > div:after {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 2.25em; /* (container width - part width)/2  */\n  width: .5em;\n  height: 1.5em;\n  border-radius: .2em;\n  background: #eee;\n  box-shadow: 0 3.5em #eee; /* container height - part height */\n  transform-origin: 50% 2.5em; /* container height / 2 */\n}\n\n.preboot-spinner:before {\n  background: #555;\n}\n\n.preboot-spinner:after {\n  transform: rotate(-45deg);\n  background: #777;\n}\n\n.preboot-spinner > div:before {\n  transform: rotate(-90deg);\n  background: #999;\n}\n\n.preboot-spinner > div:after {\n  transform: rotate(-135deg);\n  background: #bbb;\n}\n";
}
exports.getPrebootCSS = getPrebootCSS;
function createPrebootHTML(code, config) {
    var html = '';
    html += "\n    <style>\n    " + getPrebootCSS() + "\n    </style>\n  ";
    html += "\n    <script>\n    " + code + "\n    </script>\n  ";
    if (config && config.start === true) {
        html += '<script>\npreboot.start();\n</script>';
    }
    return html;
}
exports.createPrebootHTML = createPrebootHTML;
//# sourceMappingURL=ng_preboot.js.map