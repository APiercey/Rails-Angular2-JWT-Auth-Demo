var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var lang_1 = require('angular2/src/facade/lang');
var core_1 = require('angular2/core');
var dom_tokens_1 = require('angular2/src/platform/dom/dom_tokens');
var dom_renderer_1 = require('angular2/src/platform/dom/dom_renderer');
var animation_builder_1 = require('angular2/src/animate/animation_builder');
var event_manager_1 = require('angular2/src/platform/dom/events/event_manager');
var shared_styles_host_1 = require('angular2/src/platform/dom/shared_styles_host');
var dom_adapter_1 = require('angular2/src/platform/dom/dom_adapter');
var metadata_1 = require('angular2/src/core/metadata');
var helper_1 = require('../../helper');
var ServerDomRootRenderer_ = (function (_super) {
    __extends(ServerDomRootRenderer_, _super);
    function ServerDomRootRenderer_(_document, _eventManager, sharedStylesHost, animate) {
        _super.call(this, _document, _eventManager, sharedStylesHost, animate);
    }
    ServerDomRootRenderer_.prototype.renderComponent = function (componentProto) {
        // TODO(gdi2290): see PR https://github.com/angular/angular/pull/6584
        var renderer = this._registeredComponents.get(componentProto.id);
        if (lang_1.isBlank(renderer)) {
            renderer = new ServerDomRenderer(this, componentProto);
            this._registeredComponents.set(componentProto.id, renderer);
        }
        return renderer;
    };
    ServerDomRootRenderer_ = __decorate([
        core_1.Injectable(),
        __param(0, core_1.Inject(dom_tokens_1.DOCUMENT)), 
        __metadata('design:paramtypes', [Object, (typeof (_a = typeof event_manager_1.EventManager !== 'undefined' && event_manager_1.EventManager) === 'function' && _a) || Object, (typeof (_b = typeof shared_styles_host_1.DomSharedStylesHost !== 'undefined' && shared_styles_host_1.DomSharedStylesHost) === 'function' && _b) || Object, (typeof (_c = typeof animation_builder_1.AnimationBuilder !== 'undefined' && animation_builder_1.AnimationBuilder) === 'function' && _c) || Object])
    ], ServerDomRootRenderer_);
    return ServerDomRootRenderer_;
    var _a, _b, _c;
})(dom_renderer_1.DomRootRenderer);
exports.ServerDomRootRenderer_ = ServerDomRootRenderer_;
var ServerDomRenderer = (function (_super) {
    __extends(ServerDomRenderer, _super);
    function ServerDomRenderer(_rootRenderer, _componentProto) {
        if (_componentProto.encapsulation === metadata_1.ViewEncapsulation.Native) {
            _componentProto.encapsulation = metadata_1.ViewEncapsulation.Emulated;
        }
        _super.call(this, _rootRenderer, _componentProto);
    }
    ServerDomRenderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {
        if (propertyName === 'value' || (propertyName === 'checked' && propertyValue !== false)) {
            if (dom_adapter_1.DOM.nodeName(renderElement) === 'input') {
                return _super.prototype.setElementAttribute.call(this, renderElement, propertyName, propertyValue);
            }
        }
        else if (propertyName === 'src') {
            return _super.prototype.setElementAttribute.call(this, renderElement, propertyName, propertyValue);
        }
        return _super.prototype.setElementProperty.call(this, renderElement, propertyName, propertyValue);
    };
    ServerDomRenderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) {
        var styleNameCased = helper_1.cssHyphenate(styleName);
        _super.prototype.setElementStyle.call(this, renderElement, styleNameCased, styleValue);
    };
    ServerDomRenderer.prototype.invokeElementMethod = function (renderElement, methodName, args) {
        if (methodName === 'focus') {
            if (dom_adapter_1.DOM.nodeName(renderElement) === 'input') {
                return _super.prototype.invokeElementMethod.call(this, renderElement, 'autofocus', null);
            }
        }
        return _super.prototype.invokeElementMethod.call(this, location, methodName, args);
    };
    return ServerDomRenderer;
})(dom_renderer_1.DomRenderer);
exports.ServerDomRenderer = ServerDomRenderer;
//# sourceMappingURL=server_dom_renderer.js.map