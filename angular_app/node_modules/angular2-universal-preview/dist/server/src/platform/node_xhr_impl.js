var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var http = require('http');
var url = require('url');
var compiler_1 = require('angular2/compiler');
var promise_1 = require('angular2/src/facade/promise');
var NodeXHRImpl = (function (_super) {
    __extends(NodeXHRImpl, _super);
    function NodeXHRImpl() {
        _super.apply(this, arguments);
    }
    NodeXHRImpl.prototype.get = function (templateUrl) {
        var completer = promise_1.PromiseWrapper.completer(), parsedUrl = url.parse(templateUrl);
        http.get(templateUrl, function (res) {
            res.setEncoding('utf8');
            // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)
            var status = res.statusCode === 1223 ? 204 : res.statusCode;
            if (200 <= status && status <= 300) {
                var data = '';
                res.on('data', function (chunk) {
                    data += chunk;
                });
                res.on('end', function () {
                    completer.resolve(data);
                });
            }
            else {
                completer.reject("Failed to load " + templateUrl, null);
            }
            // consume response body
            res.resume();
        }).on('error', function (e) {
            completer.reject("Failed to load " + templateUrl, null);
        });
        return completer.promise;
    };
    return NodeXHRImpl;
})(compiler_1.XHR);
exports.NodeXHRImpl = NodeXHRImpl;
//# sourceMappingURL=node_xhr_impl.js.map